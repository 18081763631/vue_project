{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\dashboard\\admin\\components\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\dashboard\\admin\\components\\LineChart.vue","mtime":1593754313690},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport echarts from 'echarts';\n\nrequire('echarts/theme/macarons'); // echarts theme\n\n\nimport { debounce } from '@/utils';\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      chart: null\n    };\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler: function handler(val) {\n        this.setOptions(val);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.initChart();\n\n    if (this.autoResize) {\n      this.__resizeHandler = debounce(function () {\n        if (_this.chart) {\n          _this.chart.resize();\n        }\n      }, 100);\n      window.addEventListener('resize', this.__resizeHandler);\n    } // 监听侧边栏的变化\n\n\n    var sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n    sidebarElm.addEventListener('transitionend', this.sidebarResizeHandler);\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (!this.chart) {\n      return;\n    }\n\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHandler);\n    }\n\n    var sidebarElm = document.getElementsByClassName('sidebar-container')[0];\n    sidebarElm.removeEventListener('transitionend', this.sidebarResizeHandler);\n    this.chart.dispose();\n    this.chart = null;\n  },\n  methods: {\n    sidebarResizeHandler: function sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.__resizeHandler();\n      }\n    },\n    setOptions: function setOptions() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          expectedData = _ref.expectedData,\n          actualData = _ref.actualData;\n\n      this.chart.setOption({\n        xAxis: {\n          data: ['1:00', '2:00', '3:00', '4:00', '5:00', '6:00', '7:00', '8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '0:00'],\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\n\n        /* 线条显示情况 */\n        legend: {\n          data: ['访问量', 'actual']\n        },\n        series: [{\n          name: '访问量',\n          itemStyle: {\n            normal: {\n              color: '#FF005A',\n              lineStyle: {\n                color: '#FF005A',\n                width: 2\n              }\n            }\n          },\n          smooth: true,\n          type: 'line',\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: 'cubicInOut'\n        }\n        /*        {\n                  name: 'actual',\n                  smooth: true,\n                  type: 'line',\n                  itemStyle: {\n                    normal: {\n                      color: '#3888fa',\n                      lineStyle: {\n                        color: '#3888fa',\n                        width: 2\n                      },\n                      areaStyle: {\n                        color: '#f3f8ff'\n                      }\n                    }\n                  },\n                  data: actualData,\n                  animationDuration: 2800,\n                  animationEasing: 'quadraticOut'\n                } */\n        ]\n      });\n    },\n    initChart: function initChart() {\n      this.chart = echarts.init(this.$el, 'macarons');\n      this.setOptions(this.chartData);\n    }\n  }\n};",{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"className\" :style=\"{height:height,width:width}\"/>\n</template>\n\n<script>\nimport echarts from 'echarts'\nrequire('echarts/theme/macarons') // echarts theme\nimport { debounce } from '@/utils'\n\nexport default {\n  props: {\n    className: {\n      type: String,\n      default: 'chart'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    },\n    height: {\n      type: String,\n      default: '350px'\n    },\n    autoResize: {\n      type: Boolean,\n      default: true\n    },\n    chartData: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    }\n  },\n  watch: {\n    chartData: {\n      deep: true,\n      handler(val) {\n        this.setOptions(val)\n      }\n    }\n  },\n  mounted() {\n    this.initChart()\n    if (this.autoResize) {\n      this.__resizeHandler = debounce(() => {\n        if (this.chart) {\n          this.chart.resize()\n        }\n      }, 100)\n      window.addEventListener('resize', this.__resizeHandler)\n    }\n\n    // 监听侧边栏的变化\n    const sidebarElm = document.getElementsByClassName('sidebar-container')[0]\n    sidebarElm.addEventListener('transitionend', this.sidebarResizeHandler)\n  },\n  beforeDestroy() {\n    if (!this.chart) {\n      return\n    }\n    if (this.autoResize) {\n      window.removeEventListener('resize', this.__resizeHandler)\n    }\n\n    const sidebarElm = document.getElementsByClassName('sidebar-container')[0]\n    sidebarElm.removeEventListener('transitionend', this.sidebarResizeHandler)\n\n    this.chart.dispose()\n    this.chart = null\n  },\n  methods: {\n    sidebarResizeHandler(e) {\n      if (e.propertyName === 'width') {\n        this.__resizeHandler()\n      }\n    },\n    setOptions({ expectedData, actualData } = {}) {\n      this.chart.setOption({\n        xAxis: {\n          data: ['1:00', '2:00', '3:00', '4:00', '5:00', '6:00', '7:00' , '8:00' , '9:00' , '10:00' , '11:00' , '12:00' , '13:00' , '14:00' , '15:00',\r\n\t\t          '16:00' , '17:00' , '18:00' , '19:00' , '20:00' , '21:00' , '22:00' , '23:00' , '0:00'\r\n\t\t  ],\n          boundaryGap: false,\n          axisTick: {\n            show: false\n          }\n        },\n        grid: {\n          left: 10,\n          right: 10,\n          bottom: 20,\n          top: 30,\n          containLabel: true\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross'\n          },\n          padding: [5, 10]\n        },\n        yAxis: {\n          axisTick: {\n            show: false\n          }\n        },\r\n\t\t/* 线条显示情况 */\n        legend: {\n          data: ['访问量', 'actual']\n        },\n        series: [{\n          name: '访问量', itemStyle: {\n            normal: {\n              color: '#FF005A',\n              lineStyle: {\n                color: '#FF005A',\n                width: 2\n              }\n            }\n          },\n          smooth: true,\n          type: 'line',\n          data: expectedData,\n          animationDuration: 2800,\n          animationEasing: 'cubicInOut'\n        },\n/*        {\n          name: 'actual',\n          smooth: true,\n          type: 'line',\n          itemStyle: {\n            normal: {\n              color: '#3888fa',\n              lineStyle: {\n                color: '#3888fa',\n                width: 2\n              },\n              areaStyle: {\n                color: '#f3f8ff'\n              }\n            }\n          },\n          data: actualData,\n          animationDuration: 2800,\n          animationEasing: 'quadraticOut'\n        } */]\n      })\n    },\n    initChart() {\n      this.chart = echarts.init(this.$el, 'macarons')\n      this.setOptions(this.chartData)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/dashboard/admin/components"}]}