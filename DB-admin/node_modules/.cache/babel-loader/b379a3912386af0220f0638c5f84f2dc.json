{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\permission.js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\permission.js","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/lenovo/Desktop/vue-admin/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport router from \"./router\";\nimport store from \"./store\";\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { getToken } from '@/utils/auth';\nNProgress.configure({\n  showSpinner: false\n});\nvar whiteList = ['/login', '/auth-redirect'];\nrouter.beforeEach(function (to, from, next) {\n  NProgress.start();\n\n  if (getToken()) {\n    /* has token*/\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done();\n    } else {\n      if (store.getters.roles > 0) {\n        next();\n      } else {\n        store.dispatch('GetUserInfo').then(function (res) {\n          var access = res.data.access;\n          store.dispatch('GenerateRoutes', access).then(function () {\n            // 根据roles权限生成可访问的路由表\n            router.addRoutes(store.getters.addRouters); // 动态添加可访问路由表\n\n            next(_objectSpread(_objectSpread({}, to), {}, {\n              replace: true\n            })); // hack方法 确保addRoutes已完成\n          });\n        }).catch(function (err) {\n          store.dispatch('FedLogOut').then(function () {\n            Message.error(err || '验证失败，请重新登陆');\n            next({\n              path: '/'\n            });\n          });\n        });\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(\"/login?redirect=\".concat(to.path)); // 否则全部重定向到登录页\n\n      NProgress.done();\n    }\n  }\n});\nrouter.afterEach(function () {\n  NProgress.done();\n});",{"version":3,"sources":["C:/Users/lenovo/Desktop/vue-admin/src/permission.js"],"names":["router","store","Message","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","path","done","getters","roles","dispatch","then","res","access","data","addRoutes","addRouters","replace","catch","err","error","indexOf","afterEach"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP;AACA,OAAOC,KAAP;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEAD,SAAS,CAACE,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB;AAEA,IAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,CAAlB;AAEAP,MAAM,CAACQ,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpCR,EAAAA,SAAS,CAACS,KAAV;;AACA,MAAIR,QAAQ,EAAZ,EAAgB;AACd;AACA,QAAIK,EAAE,CAACI,IAAH,KAAY,QAAhB,EAA0B;AACxBF,MAAAA,IAAI,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACAV,MAAAA,SAAS,CAACW,IAAV;AACD,KAHD,MAGO;AACL,UAAIb,KAAK,CAACc,OAAN,CAAcC,KAAd,GAAsB,CAA1B,EAA6B;AAC3BL,QAAAA,IAAI;AACL,OAFD,MAEO;AACLV,QAAAA,KAAK,CAACgB,QAAN,CAAe,aAAf,EAA8BC,IAA9B,CAAmC,UAAAC,GAAG,EAAI;AACxC,cAAMC,MAAM,GAAGD,GAAG,CAACE,IAAJ,CAASD,MAAxB;AACAnB,UAAAA,KAAK,CAACgB,QAAN,CAAe,gBAAf,EAAiCG,MAAjC,EAAyCF,IAAzC,CAA8C,YAAM;AAAE;AACpDlB,YAAAA,MAAM,CAACsB,SAAP,CAAiBrB,KAAK,CAACc,OAAN,CAAcQ,UAA/B,EADkD,CACP;;AAC3CZ,YAAAA,IAAI,iCAAMF,EAAN;AAAUe,cAAAA,OAAO,EAAE;AAAnB,eAAJ,CAFkD,CAEnB;AAChC,WAHD;AAID,SAND,EAMGC,KANH,CAMS,UAACC,GAAD,EAAS;AAChBzB,UAAAA,KAAK,CAACgB,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,YAAM;AACrChB,YAAAA,OAAO,CAACyB,KAAR,CAAcD,GAAG,IAAI,YAArB;AACAf,YAAAA,IAAI,CAAC;AAAEE,cAAAA,IAAI,EAAE;AAAR,aAAD,CAAJ;AACD,WAHD;AAID,SAXD;AAYD;AACF;AACF,GAvBD,MAuBO;AACL;AACA,QAAIN,SAAS,CAACqB,OAAV,CAAkBnB,EAAE,CAACI,IAArB,MAA+B,CAAC,CAApC,EAAuC;AAAE;AACvCF,MAAAA,IAAI;AACL,KAFD,MAEO;AACLA,MAAAA,IAAI,2BAAoBF,EAAE,CAACI,IAAvB,EAAJ,CADK,CAC8B;;AACnCV,MAAAA,SAAS,CAACW,IAAV;AACD;AACF;AACF,CAlCD;AAoCAd,MAAM,CAAC6B,SAAP,CAAiB,YAAM;AACrB1B,EAAAA,SAAS,CAACW,IAAV;AACD,CAFD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\nimport { getToken } from '@/utils/auth'\n\nNProgress.configure({ showSpinner: false })\n\nconst whiteList = ['/login', '/auth-redirect']\n\nrouter.beforeEach((to, from, next) => {\n  NProgress.start()\n  if (getToken()) {\n    /* has token*/\n    if (to.path === '/login') {\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      if (store.getters.roles > 0) {\n        next()\n      } else {\n        store.dispatch('GetUserInfo').then(res => {\n          const access = res.data.access\n          store.dispatch('GenerateRoutes', access).then(() => { // 根据roles权限生成可访问的路由表\n            router.addRoutes(store.getters.addRouters) // 动态添加可访问路由表\n            next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\n          })\n        }).catch((err) => {\n          store.dispatch('FedLogOut').then(() => {\n            Message.error(err || '验证失败，请重新登陆')\n            next({ path: '/' })\n          })\n        })\n      }\n    }\n  } else {\n    /* has no token*/\n    if (whiteList.indexOf(to.path) !== -1) { // 在免登录白名单，直接进入\n      next()\n    } else {\n      next(`/login?redirect=${to.path}`) // 否则全部重定向到登录页\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  NProgress.done()\n})\n"]}]}