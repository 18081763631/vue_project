{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\roles\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\roles\\form.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getListAll } from '@/api/rules';\nimport { getinfo, save } from '@/api/roles';\nimport tree from '@/utils/tree';\nexport default {\n  name: 'RolesForm',\n  data: function data() {\n    return {\n      btnLoading: false,\n      ruleList: [],\n      temp: {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '名称必填',\n          trigger: 'blur'\n        }]\n      },\n      defaultChecked: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n    };\n  },\n  computed: {\n    getRulesList: function getRulesList() {\n      return tree.listToTreeMulti(this.ruleList);\n    }\n  },\n  watch: {\n    dialogFormVisible: function dialogFormVisible() {\n      this.resetTemp();\n    }\n  },\n  created: function created() {\n    this.getRules();\n  },\n  destroyed: function destroyed() {},\n  methods: {\n    getRules: function getRules() {\n      var _this2 = this;\n\n      getListAll().then(function (response) {\n        _this2.ruleList = response.data;\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      };\n    },\n    checkHandle: function checkHandle(data) {\n      var halfCheckedKeys = this.$refs.tree.getHalfCheckedKeys().join(',');\n      var checkedKeys = this.$refs.tree.getCheckedKeys().join(',');\n\n      if (halfCheckedKeys.length && checkedKeys.length) {\n        this.temp.rules = halfCheckedKeys + ',' + checkedKeys;\n      } else if (halfCheckedKeys.length && checkedKeys.length === 0) {\n        this.temp.rules = halfCheckedKeys;\n      } else if (halfCheckedKeys.length === 0 && checkedKeys.length) {\n        this.temp.rules = checkedKeys;\n      } else {\n        this.temp.rules = '';\n      }\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.currentIndex = -1;\n      this.$refs.tree.setCheckedKeys([]);\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    handleUpdate: function handleUpdate(id) {\n      var _this4 = this;\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n\n      var _this = this;\n\n      getinfo(id).then(function (response) {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id;\n          _this.temp.title = response.data.title;\n          _this.temp.status = response.data.status;\n          _this.temp.rules = response.data.rules;\n\n          _this4.$refs.tree.setCheckedKeys(_this.temp.rules.split(','));\n        }\n      });\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    saveData: function saveData() {\n      var _this5 = this;\n\n      this.btnLoading = true;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var _this = _this5;\n          var d = _this5.temp;\n          save(d).then(function (response) {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id;\n              }\n\n              _this5.$emit('updateRow', d);\n\n              _this.dialogFormVisible = false;\n\n              _this.$message.success(response.msg);\n            } else {\n              _this.$message.error(response.msg);\n            }\n\n            _this.btnLoading = false;\n          }).catch(function (error) {\n            _this5.btnLoading = false;\n          });\n        } else {\n          _this5.btnLoading = false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n    <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 100%; height: 50vh;overflow-y: scroll;\">\n      <el-form-item label=\"名称\" prop=\"title\">\n        <el-input v-model=\"temp.title\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"状态\">\n        <el-radio-group v-model=\"temp.status\">\n          <el-radio :label=\"1\">正常</el-radio>\n          <el-radio :label=\"0\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"权限\">\n        <el-tree\n          ref=\"tree\"\n          :data=\"getRulesList\"\n          :default-checked-keys=\"defaultChecked\"\n          :props=\"defaultProps\"\n          default-expand-all\n          show-checkbox\n          check-strictly\n          node-key=\"id\"\n          @check=\"checkHandle\"/>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n      <el-button :loading=\"btnLoading\" type=\"primary\" @click=\"saveData()\">保存</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getListAll } from '@/api/rules'\nimport { getinfo, save } from '@/api/roles'\nimport tree from '@/utils/tree'\n\nexport default {\n  name: 'RolesForm',\n  data() {\n    return {\n      btnLoading: false,\n      ruleList: [],\n      temp: {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        title: [{ required: true, message: '名称必填', trigger: 'blur' }]\n      },\n      defaultChecked: [],\n      defaultProps: {\n        children: 'children',\n        label: 'title'\n      }\n\n    }\n  },\n  computed: {\n    getRulesList() {\n      return tree.listToTreeMulti(this.ruleList)\n    }\n  },\n  watch: {\n    dialogFormVisible: function() {\n      this.resetTemp()\n    }\n  },\n  created() {\n    this.getRules()\n  },\n  destroyed() {\n  },\n  methods: {\n    getRules() {\n      getListAll().then(response => {\n        this.ruleList = response.data\n      })\n    },\n    resetTemp() {\n      this.temp = {\n        id: 0,\n        title: '',\n        status: 1,\n        rules: ''\n      }\n    },\n    checkHandle(data) {\n      const halfCheckedKeys = this.$refs.tree.getHalfCheckedKeys().join(',')\n      const checkedKeys = this.$refs.tree.getCheckedKeys().join(',')\n      if (halfCheckedKeys.length && checkedKeys.length) {\n        this.temp.rules = halfCheckedKeys + ',' + checkedKeys\n      } else if (halfCheckedKeys.length && checkedKeys.length === 0) {\n        this.temp.rules = halfCheckedKeys\n      } else if (halfCheckedKeys.length === 0 && checkedKeys.length) {\n        this.temp.rules = checkedKeys\n      } else {\n        this.temp.rules = ''\n      }\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.currentIndex = -1\n      this.$refs.tree.setCheckedKeys([])\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleUpdate(id) {\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      const _this = this\n      getinfo(id).then(response => {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id\n          _this.temp.title = response.data.title\n          _this.temp.status = response.data.status\n          _this.temp.rules = response.data.rules\n          this.$refs.tree.setCheckedKeys(_this.temp.rules.split(','))\n        }\n      })\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          save(d).then(response => {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id\n              }\n              this.$emit('updateRow', d)\n              _this.dialogFormVisible = false\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/manage/roles"}]}