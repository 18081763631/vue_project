{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\rules\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\rules\\form.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getinfo, save } from '@/api/rules';\nimport tree from '@/utils/tree';\nexport default {\n  name: 'RulesForm',\n  components: {},\n  props: {\n    ruleList: {\n      type: Array,\n      default: []\n    }\n  },\n  data: function data() {\n    return {\n      btnLoading: false,\n      ruleTop: [{\n        'id': 0,\n        'title': '顶级'\n      }],\n      pid: [],\n      props_pid: {\n        'label': 'title',\n        'value': 'id'\n      },\n      temp: {\n        id: 0,\n        pid: 0,\n        title: '',\n        name: '',\n        status: 1,\n        icon: '',\n        path: '',\n        component: 'layout/Layout',\n        hidden: 0,\n        noCache: 1,\n        alwaysShow: 1,\n        redirect: 'noredirect'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '名称必填',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '标识必填',\n          trigger: 'blur'\n        }],\n        icon: [{\n          required: true,\n          message: '图标必填',\n          trigger: 'blur'\n        }],\n        path: [{\n          required: true,\n          message: '路径必填',\n          trigger: 'blur'\n        }],\n        component: [{\n          required: true,\n          message: '组件必填',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    getRulesList: function getRulesList() {\n      return this.ruleTop.concat(tree.listToTreeMulti(this.ruleList));\n    }\n  },\n  watch: {\n    dialogFormVisible: function dialogFormVisible() {\n      this.resetTemp();\n    },\n    temp: {\n      handler: function handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created: function created() {},\n  destroyed: function destroyed() {},\n  methods: {\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: 0,\n        pid: 0,\n        title: '',\n        name: '',\n        status: 1,\n        icon: '',\n        path: '',\n        component: 'layout/Layout',\n        hidden: 0,\n        noCache: 1,\n        alwaysShow: 1,\n        redirect: 'noredirect'\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this2 = this;\n\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.currentIndex = -1;\n      this.pid = [];\n      this.$nextTick(function () {\n        _this2.$refs['dataForm'].clearValidate();\n      });\n    },\n    handleUpdate: function handleUpdate(id) {\n      var _this3 = this;\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n\n      var _this = this;\n\n      getinfo(id).then(function (response) {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id;\n          _this.temp.pid = response.data.pid;\n          _this.temp.title = response.data.title;\n          _this.temp.name = response.data.name;\n          _this.temp.status = response.data.status;\n          _this.temp.icon = response.data.icon;\n          _this.temp.path = response.data.path;\n          _this.temp.component = response.data.component;\n          _this.temp.hidden = response.data.hidden;\n          _this.temp.noCache = response.data.noCache;\n          _this.temp.alwaysShow = response.data.alwaysShow;\n          _this.temp.redirect = response.data.redirect;\n          _this.pid = tree.getParentsId(_this3.ruleList, id);\n        }\n      });\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    saveData: function saveData() {\n      var _this4 = this;\n\n      this.btnLoading = true;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var _this = _this4;\n          var d = _this4.temp;\n          save(d).then(function (response) {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id2 = response.data.id;\n              }\n\n              _this4.$emit('updateRow', d);\n\n              _this.dialogFormVisible = false;\n\n              _this.$message.success(response.msg);\n            } else {\n              _this.$message.error(response.msg);\n            }\n\n            _this.btnLoading = false;\n          }).catch(function (error) {\n            _this4.btnLoading = false;\n          });\n        } else {\n          _this4.btnLoading = false;\n        }\n      });\n    },\n    handleChange: function handleChange(value) {\n      if (value.length) {\n        this.temp.pid = value[value.length - 1];\n      }\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n    <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 100%; height: 50vh;overflow-y: scroll;\">\n      <el-form-item label=\"上级\" prop=\"pid\">\n        <el-cascader v-model=\"pid\" :options=\"getRulesList\" :props=\"props_pid\" placeholder=\"请选择\" change-on-select @change=\"handleChange\"/>\n      </el-form-item>\n      <el-form-item label=\"名称\" prop=\"title\">\n        <el-input v-model=\"temp.title\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"标识\" prop=\"name\">\n        <el-input v-model=\"temp.name\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"图标\" prop=\"icon\">\n        <el-input v-model=\"temp.icon\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"路径\" prop=\"path\">\n        <el-input v-model=\"temp.path\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"组件\" prop=\"component\">\n        <el-input v-model=\"temp.component\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"跳转\" prop=\"redirect\">\n        <el-input v-model=\"temp.redirect\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"状态\">\n        <el-radio-group v-model=\"temp.status\">\n          <el-radio :label=\"1\">正常</el-radio>\n          <el-radio :label=\"0\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"隐藏\">\n        <el-radio-group v-model=\"temp.hidden\">\n          <el-radio :label=\"1\">是</el-radio>\n          <el-radio :label=\"0\">否</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"缓存\">\n        <el-radio-group v-model=\"temp.noCache\">\n          <el-radio :label=\"0\">是</el-radio>\n          <el-radio :label=\"1\">否</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      <el-form-item label=\"展示\">\n        <el-radio-group v-model=\"temp.alwaysShow\">\n          <el-radio :label=\"1\">是</el-radio>\n          <el-radio :label=\"0\">否</el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n      <el-button :loading=\"btnLoading\" type=\"primary\" @click=\"saveData()\">保存</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport { getinfo, save } from '@/api/rules'\nimport tree from '@/utils/tree'\nexport default {\n  name: 'RulesForm',\n  components: {},\n  props: {\n    ruleList: {\n      type: Array,\n      default: []\n    }\n  },\n  data() {\n    return {\n      btnLoading: false,\n      ruleTop: [{ 'id': 0, 'title': '顶级' }],\n      pid: [],\n      props_pid: { 'label': 'title', 'value': 'id' },\n      temp: {\n        id: 0,\n        pid: 0,\n        title: '',\n        name: '',\n        status: 1,\n        icon: '',\n        path: '',\n        component: 'layout/Layout',\n        hidden: 0,\n        noCache: 1,\n        alwaysShow: 1,\n        redirect: 'noredirect'\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        title: [{ required: true, message: '名称必填', trigger: 'blur' }],\n        name: [{ required: true, message: '标识必填', trigger: 'blur' }],\n        icon: [{ required: true, message: '图标必填', trigger: 'blur' }],\n        path: [{ required: true, message: '路径必填', trigger: 'blur' }],\n        component: [{ required: true, message: '组件必填', trigger: 'blur' }]\n      }\n    }\n  },\n  computed: {\n    getRulesList() {\n      return this.ruleTop.concat(tree.listToTreeMulti(this.ruleList))\n    }\n  },\n  watch: {\n    dialogFormVisible: function() {\n      this.resetTemp()\n    },\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n\n  },\n  destroyed() {\n\n  },\n  methods: {\n    resetTemp() {\n      this.temp = {\n        id: 0,\n        pid: 0,\n        title: '',\n        name: '',\n        status: 1,\n        icon: '',\n        path: '',\n        component: 'layout/Layout',\n        hidden: 0,\n        noCache: 1,\n        alwaysShow: 1,\n        redirect: 'noredirect'\n      }\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.currentIndex = -1\n      this.pid = []\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleUpdate(id) {\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      const _this = this\n      getinfo(id).then(response => {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id\n          _this.temp.pid = response.data.pid\n          _this.temp.title = response.data.title\n          _this.temp.name = response.data.name\n          _this.temp.status = response.data.status\n          _this.temp.icon = response.data.icon\n          _this.temp.path = response.data.path\n          _this.temp.component = response.data.component\n          _this.temp.hidden = response.data.hidden\n          _this.temp.noCache = response.data.noCache\n          _this.temp.alwaysShow = response.data.alwaysShow\n          _this.temp.redirect = response.data.redirect\n          _this.pid = tree.getParentsId(this.ruleList, id)\n        }\n      })\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          save(d).then(response => {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id2 = response.data.id\n              }\n              this.$emit('updateRow', d)\n              _this.dialogFormVisible = false\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    },\n    handleChange(value) {\n      if (value.length) {\n        this.temp.pid = value[value.length - 1]\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/manage/rules"}]}