{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\store\\modules\\tagsView.js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\store\\modules\\tagsView.js","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _toConsumableArray from \"C:/Users/lenovo/Desktop/vue-admin/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/lenovo/Desktop/vue-admin/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar tagsView = {\n  state: {\n    visitedViews: [],\n    cachedViews: []\n  },\n  mutations: {\n    ADD_VISITED_VIEW: function ADD_VISITED_VIEW(state, view) {\n      if (state.visitedViews.some(function (v) {\n        return v.path === view.path;\n      })) return;\n      state.visitedViews.push(Object.assign({}, view, {\n        title: view.meta.title || 'no-name'\n      }));\n    },\n    ADD_CACHED_VIEW: function ADD_CACHED_VIEW(state, view) {\n      if (state.cachedViews.includes(view.name)) return;\n\n      if (!view.meta.noCache) {\n        state.cachedViews.push(view.name);\n      }\n    },\n    DEL_VISITED_VIEW: function DEL_VISITED_VIEW(state, view) {\n      var _iterator = _createForOfIteratorHelper(state.visitedViews.entries()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n              i = _step$value[0],\n              v = _step$value[1];\n\n          if (v.path === view.path) {\n            state.visitedViews.splice(i, 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    DEL_CACHED_VIEW: function DEL_CACHED_VIEW(state, view) {\n      var _iterator2 = _createForOfIteratorHelper(state.cachedViews),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var i = _step2.value;\n\n          if (i === view.name) {\n            var index = state.cachedViews.indexOf(i);\n            state.cachedViews.splice(index, 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    },\n    DEL_OTHERS_VISITED_VIEWS: function DEL_OTHERS_VISITED_VIEWS(state, view) {\n      var _iterator3 = _createForOfIteratorHelper(state.visitedViews.entries()),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 2),\n              i = _step3$value[0],\n              v = _step3$value[1];\n\n          if (v.path === view.path) {\n            state.visitedViews = state.visitedViews.slice(i, i + 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    },\n    DEL_OTHERS_CACHED_VIEWS: function DEL_OTHERS_CACHED_VIEWS(state, view) {\n      var _iterator4 = _createForOfIteratorHelper(state.cachedViews),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var i = _step4.value;\n\n          if (i === view.name) {\n            var index = state.cachedViews.indexOf(i);\n            state.cachedViews = state.cachedViews.slice(index, index + 1);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    },\n    DEL_ALL_VISITED_VIEWS: function DEL_ALL_VISITED_VIEWS(state) {\n      state.visitedViews = [];\n    },\n    DEL_ALL_CACHED_VIEWS: function DEL_ALL_CACHED_VIEWS(state) {\n      state.cachedViews = [];\n    },\n    UPDATE_VISITED_VIEW: function UPDATE_VISITED_VIEW(state, view) {\n      var _iterator5 = _createForOfIteratorHelper(state.visitedViews),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var v = _step5.value;\n\n          if (v.path === view.path) {\n            v = Object.assign(v, view);\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  },\n  actions: {\n    addView: function addView(_ref, view) {\n      var dispatch = _ref.dispatch;\n      dispatch('addVisitedView', view);\n      dispatch('addCachedView', view);\n    },\n    addVisitedView: function addVisitedView(_ref2, view) {\n      var commit = _ref2.commit;\n      commit('ADD_VISITED_VIEW', view);\n    },\n    addCachedView: function addCachedView(_ref3, view) {\n      var commit = _ref3.commit;\n      commit('ADD_CACHED_VIEW', view);\n    },\n    delView: function delView(_ref4, view) {\n      var dispatch = _ref4.dispatch,\n          state = _ref4.state;\n      return new Promise(function (resolve) {\n        dispatch('delVisitedView', view);\n        dispatch('delCachedView', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delVisitedView: function delVisitedView(_ref5, view) {\n      var commit = _ref5.commit,\n          state = _ref5.state;\n      return new Promise(function (resolve) {\n        commit('DEL_VISITED_VIEW', view);\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delCachedView: function delCachedView(_ref6, view) {\n      var commit = _ref6.commit,\n          state = _ref6.state;\n      return new Promise(function (resolve) {\n        commit('DEL_CACHED_VIEW', view);\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    },\n    delOthersViews: function delOthersViews(_ref7, view) {\n      var dispatch = _ref7.dispatch,\n          state = _ref7.state;\n      return new Promise(function (resolve) {\n        dispatch('delOthersVisitedViews', view);\n        dispatch('delOthersCachedViews', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delOthersVisitedViews: function delOthersVisitedViews(_ref8, view) {\n      var commit = _ref8.commit,\n          state = _ref8.state;\n      return new Promise(function (resolve) {\n        commit('DEL_OTHERS_VISITED_VIEWS', view);\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delOthersCachedViews: function delOthersCachedViews(_ref9, view) {\n      var commit = _ref9.commit,\n          state = _ref9.state;\n      return new Promise(function (resolve) {\n        commit('DEL_OTHERS_CACHED_VIEWS', view);\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    },\n    delAllViews: function delAllViews(_ref10, view) {\n      var dispatch = _ref10.dispatch,\n          state = _ref10.state;\n      return new Promise(function (resolve) {\n        dispatch('delAllVisitedViews', view);\n        dispatch('delAllCachedViews', view);\n        resolve({\n          visitedViews: _toConsumableArray(state.visitedViews),\n          cachedViews: _toConsumableArray(state.cachedViews)\n        });\n      });\n    },\n    delAllVisitedViews: function delAllVisitedViews(_ref11) {\n      var commit = _ref11.commit,\n          state = _ref11.state;\n      return new Promise(function (resolve) {\n        commit('DEL_ALL_VISITED_VIEWS');\n        resolve(_toConsumableArray(state.visitedViews));\n      });\n    },\n    delAllCachedViews: function delAllCachedViews(_ref12) {\n      var commit = _ref12.commit,\n          state = _ref12.state;\n      return new Promise(function (resolve) {\n        commit('DEL_ALL_CACHED_VIEWS');\n        resolve(_toConsumableArray(state.cachedViews));\n      });\n    },\n    updateVisitedView: function updateVisitedView(_ref13, view) {\n      var commit = _ref13.commit;\n      commit('UPDATE_VISITED_VIEW', view);\n    }\n  }\n};\nexport default tagsView;",{"version":3,"sources":["C:/Users/lenovo/Desktop/vue-admin/src/store/modules/tagsView.js"],"names":["tagsView","state","visitedViews","cachedViews","mutations","ADD_VISITED_VIEW","view","some","v","path","push","Object","assign","title","meta","ADD_CACHED_VIEW","includes","name","noCache","DEL_VISITED_VIEW","entries","i","splice","DEL_CACHED_VIEW","index","indexOf","DEL_OTHERS_VISITED_VIEWS","slice","DEL_OTHERS_CACHED_VIEWS","DEL_ALL_VISITED_VIEWS","DEL_ALL_CACHED_VIEWS","UPDATE_VISITED_VIEW","actions","addView","dispatch","addVisitedView","commit","addCachedView","delView","Promise","resolve","delVisitedView","delCachedView","delOthersViews","delOthersVisitedViews","delOthersCachedViews","delAllViews","delAllVisitedViews","delAllCachedViews","updateVisitedView"],"mappings":"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","sourcesContent":["const tagsView = {\n  state: {\n    visitedViews: [],\n    cachedViews: []\n  },\n  mutations: {\n    ADD_VISITED_VIEW: (state, view) => {\n      if (state.visitedViews.some(v => v.path === view.path)) return\n      state.visitedViews.push(\n        Object.assign({}, view, {\n          title: view.meta.title || 'no-name'\n        })\n      )\n    },\n    ADD_CACHED_VIEW: (state, view) => {\n      if (state.cachedViews.includes(view.name)) return\n      if (!view.meta.noCache) {\n        state.cachedViews.push(view.name)\n      }\n    },\n\n    DEL_VISITED_VIEW: (state, view) => {\n      for (const [i, v] of state.visitedViews.entries()) {\n        if (v.path === view.path) {\n          state.visitedViews.splice(i, 1)\n          break\n        }\n      }\n    },\n    DEL_CACHED_VIEW: (state, view) => {\n      for (const i of state.cachedViews) {\n        if (i === view.name) {\n          const index = state.cachedViews.indexOf(i)\n          state.cachedViews.splice(index, 1)\n          break\n        }\n      }\n    },\n\n    DEL_OTHERS_VISITED_VIEWS: (state, view) => {\n      for (const [i, v] of state.visitedViews.entries()) {\n        if (v.path === view.path) {\n          state.visitedViews = state.visitedViews.slice(i, i + 1)\n          break\n        }\n      }\n    },\n    DEL_OTHERS_CACHED_VIEWS: (state, view) => {\n      for (const i of state.cachedViews) {\n        if (i === view.name) {\n          const index = state.cachedViews.indexOf(i)\n          state.cachedViews = state.cachedViews.slice(index, index + 1)\n          break\n        }\n      }\n    },\n\n    DEL_ALL_VISITED_VIEWS: state => {\n      state.visitedViews = []\n    },\n    DEL_ALL_CACHED_VIEWS: state => {\n      state.cachedViews = []\n    },\n\n    UPDATE_VISITED_VIEW: (state, view) => {\n      for (let v of state.visitedViews) {\n        if (v.path === view.path) {\n          v = Object.assign(v, view)\n          break\n        }\n      }\n    }\n\n  },\n  actions: {\n    addView({ dispatch }, view) {\n      dispatch('addVisitedView', view)\n      dispatch('addCachedView', view)\n    },\n    addVisitedView({ commit }, view) {\n      commit('ADD_VISITED_VIEW', view)\n    },\n    addCachedView({ commit }, view) {\n      commit('ADD_CACHED_VIEW', view)\n    },\n\n    delView({ dispatch, state }, view) {\n      return new Promise(resolve => {\n        dispatch('delVisitedView', view)\n        dispatch('delCachedView', view)\n        resolve({\n          visitedViews: [...state.visitedViews],\n          cachedViews: [...state.cachedViews]\n        })\n      })\n    },\n    delVisitedView({ commit, state }, view) {\n      return new Promise(resolve => {\n        commit('DEL_VISITED_VIEW', view)\n        resolve([...state.visitedViews])\n      })\n    },\n    delCachedView({ commit, state }, view) {\n      return new Promise(resolve => {\n        commit('DEL_CACHED_VIEW', view)\n        resolve([...state.cachedViews])\n      })\n    },\n\n    delOthersViews({ dispatch, state }, view) {\n      return new Promise(resolve => {\n        dispatch('delOthersVisitedViews', view)\n        dispatch('delOthersCachedViews', view)\n        resolve({\n          visitedViews: [...state.visitedViews],\n          cachedViews: [...state.cachedViews]\n        })\n      })\n    },\n    delOthersVisitedViews({ commit, state }, view) {\n      return new Promise(resolve => {\n        commit('DEL_OTHERS_VISITED_VIEWS', view)\n        resolve([...state.visitedViews])\n      })\n    },\n    delOthersCachedViews({ commit, state }, view) {\n      return new Promise(resolve => {\n        commit('DEL_OTHERS_CACHED_VIEWS', view)\n        resolve([...state.cachedViews])\n      })\n    },\n\n    delAllViews({ dispatch, state }, view) {\n      return new Promise(resolve => {\n        dispatch('delAllVisitedViews', view)\n        dispatch('delAllCachedViews', view)\n        resolve({\n          visitedViews: [...state.visitedViews],\n          cachedViews: [...state.cachedViews]\n        })\n      })\n    },\n    delAllVisitedViews({ commit, state }) {\n      return new Promise(resolve => {\n        commit('DEL_ALL_VISITED_VIEWS')\n        resolve([...state.visitedViews])\n      })\n    },\n    delAllCachedViews({ commit, state }) {\n      return new Promise(resolve => {\n        commit('DEL_ALL_CACHED_VIEWS')\n        resolve([...state.cachedViews])\n      })\n    },\n\n    updateVisitedView({ commit }, view) {\n      commit('UPDATE_VISITED_VIEW', view)\n    }\n  }\n}\n\nexport default tagsView\n"]}]}