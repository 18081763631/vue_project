{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\ScrollPane\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\ScrollPane\\index.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nvar padding = 15; // tag's padding\n\nexport default {\n  name: 'ScrollPane',\n  data: function data() {\n    return {\n      left: 0\n    };\n  },\n  methods: {\n    handleScroll: function handleScroll(e) {\n      var eventDelta = e.wheelDelta || -e.deltaY * 40;\n      var $scrollWrapper = this.$refs.scrollContainer.$refs.wrap;\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4;\n    },\n    moveToTarget: function moveToTarget($target) {\n      var $container = this.$refs.scrollContainer.$el;\n      var $containerWidth = $container.offsetWidth;\n      var $scrollWrapper = this.$refs.scrollContainer.$refs.wrap;\n      var $targetLeft = $target.offsetLeft;\n      var $targetWidth = $target.offsetWidth;\n\n      if ($targetLeft > $containerWidth) {\n        // tag in the right\n        $scrollWrapper.scrollLeft = $targetLeft - $containerWidth + $targetWidth + padding;\n      } else {\n        // tag in the left\n        $scrollWrapper.scrollLeft = $targetLeft - padding;\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;AAOA,IAAA,OAAA,GAAA,EAAA,C,CAAA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,CADA,EACA;AACA,UAAA,UAAA,GAAA,CAAA,CAAA,UAAA,IAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,UAAA,cAAA,GAAA,KAAA,KAAA,CAAA,eAAA,CAAA,KAAA,CAAA,IAAA;AACA,MAAA,cAAA,CAAA,UAAA,GAAA,cAAA,CAAA,UAAA,GAAA,UAAA,GAAA,CAAA;AACA,KALA;AAMA,IAAA,YANA,wBAMA,OANA,EAMA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,eAAA,CAAA,GAAA;AACA,UAAA,eAAA,GAAA,UAAA,CAAA,WAAA;AACA,UAAA,cAAA,GAAA,KAAA,KAAA,CAAA,eAAA,CAAA,KAAA,CAAA,IAAA;AACA,UAAA,WAAA,GAAA,OAAA,CAAA,UAAA;AACA,UAAA,YAAA,GAAA,OAAA,CAAA,WAAA;;AACA,UAAA,WAAA,GAAA,eAAA,EAAA;AACA;AACA,QAAA,cAAA,CAAA,UAAA,GAAA,WAAA,GAAA,eAAA,GAAA,YAAA,GAAA,OAAA;AACA,OAHA,MAGA;AACA;AACA,QAAA,cAAA,CAAA,UAAA,GAAA,WAAA,GAAA,OAAA;AACA;AACA;AAnBA;AAPA,CAAA","sourcesContent":["<template>\n  <el-scrollbar ref=\"scrollContainer\" :vertical=\"false\" class=\"scroll-container\" @wheel.native.prevent=\"handleScroll\">\n    <slot/>\n  </el-scrollbar>\n</template>\n\n<script>\nconst padding = 15 // tag's padding\n\nexport default {\n  name: 'ScrollPane',\n  data() {\n    return {\n      left: 0\n    }\n  },\n  methods: {\n    handleScroll(e) {\n      const eventDelta = e.wheelDelta || -e.deltaY * 40\n      const $scrollWrapper = this.$refs.scrollContainer.$refs.wrap\n      $scrollWrapper.scrollLeft = $scrollWrapper.scrollLeft + eventDelta / 4\n    },\n    moveToTarget($target) {\n      const $container = this.$refs.scrollContainer.$el\n      const $containerWidth = $container.offsetWidth\n      const $scrollWrapper = this.$refs.scrollContainer.$refs.wrap\n      const $targetLeft = $target.offsetLeft\n      const $targetWidth = $target.offsetWidth\n      if ($targetLeft > $containerWidth) {\n        // tag in the right\n        $scrollWrapper.scrollLeft = $targetLeft - $containerWidth + $targetWidth + padding\n      } else {\n        // tag in the left\n        $scrollWrapper.scrollLeft = $targetLeft - padding\n      }\n    }\n  }\n}\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n.scroll-container {\n  white-space: nowrap;\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  /deep/ {\n    .el-scrollbar__bar {\n      bottom: 0px;\n    }\n    .el-scrollbar__wrap {\n      height: 49px;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components/ScrollPane"}]}