{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\rules.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\rules.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList, del, change, delAll, changeAll } from '@/api/rules';\nimport waves from '@/directive/waves'; // 水波纹指令\n\nimport { getArrByKey } from '@/utils';\nimport tree from '@/utils/tree';\nimport rulesForm from \"./rules/form\";\nimport treeTable from '@/components/TreeTable';\nexport default {\n  name: 'Rules',\n  components: {\n    rulesForm: rulesForm,\n    treeTable: treeTable\n  },\n  directives: {\n    waves: waves\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        0: '禁用',\n        1: '正常'\n      };\n      return statusMap[status];\n    }\n  },\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      selectedRows: null,\n      listLoading: true,\n      expandAll: true,\n      columns: [{\n        text: '名称',\n        value: 'title'\n      }],\n      listQuery: {\n        status: '-1',\n        title: ''\n      },\n      buttonDisabled: true,\n      deleting: false\n    };\n  },\n  computed: {\n    getRulesList: function getRulesList() {\n      return tree.listToTreeMulti(this.list, 0, 'id', 'pid', 'children', {\n        'delete': false\n      });\n    }\n  },\n  watch: {},\n  created: function created() {\n    this.fetchList();\n  },\n  methods: {\n    fetchList: function fetchList() {\n      var _this2 = this;\n\n      this.listLoading = true;\n      getList(this.listQuery).then(function (response) {\n        _this2.list = response.data.data;\n        _this2.listLoading = false;\n      });\n    },\n    handleFilterClear: function handleFilterClear() {\n      this.listQuery = {\n        status: '-1',\n        title: ''\n      };\n      this.fetchList();\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false;\n      } else {\n        this.buttonDisabled = true;\n      }\n\n      this.selectedRows = val;\n    },\n    handleCreate: function handleCreate() {\n      this.$refs.fromRules.handleCreate();\n    },\n    handleUpdate: function handleUpdate(index, id) {\n      this.$refs.fromRules.handleUpdate(id);\n    },\n    handleModifyStatus: function handleModifyStatus(index, id, status) {\n      var statusObj = {\n        'status': 1 - status\n      };\n      this.list = tree.upadteArr(this.list, 'id', id, statusObj);\n      change(id, 'status', 1 - status).then(function (response) {});\n    },\n    updateRow: function updateRow(temp) {\n      this.fetchList();\n    },\n    handleDelete: function handleDelete(index, id) {\n      var _this3 = this;\n\n      var _this = this;\n\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var delObj = {\n          'delete': true\n        };\n        _this.list = tree.upadteArr(_this.list, 'id', id, delObj);\n        del(id).then(function (response) {\n          if (response.status === 1) {\n            _this.$notify.success(response.msg);\n\n            _this.fetchList();\n          } else {\n            _this.$notify.error(response.msg);\n          }\n\n          var delObj = {\n            'delete': false\n          };\n          _this.list = tree.upadteArr(_this.list, 'id', id, delObj);\n        }).catch(function (error) {\n          var delObj = {\n            'delete': false\n          };\n          _this.list = tree.upadteArr(_this.list, 'id', id, delObj);\n        });\n      }).catch(function () {\n        _this3.$message({\n          type: 'info',\n          message: '已取消删除'\n        });\n      });\n    },\n    handleDeleteAll: function handleDeleteAll() {\n      var _this4 = this;\n\n      var _this = this;\n\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          _this.deleting = true;\n          var ids = getArrByKey(_this.selectedRows, 'id');\n          var idstr = ids.join(',');\n          delAll({\n            ids: idstr\n          }).then(function (response) {\n            if (response.status === 1) {\n              _this.$message.success(response.msg);\n\n              _this.fetchList();\n            } else {\n              _this.$message.error(response.msg);\n            }\n\n            _this.deleting = false;\n          }).catch(function (error) {\n            _this.deleting = false;\n          });\n        }).catch(function () {\n          _this4.$message({\n            type: 'info',\n            message: '已取消删除'\n          });\n        });\n      } else {\n        _this.$message.error('请选择要删除的数据');\n      }\n    },\n    handleCommand: function handleCommand(command) {\n      var _this = this;\n\n      if (this.selectedRows.length > 0) {\n        var ids = getArrByKey(this.selectedRows, 'id');\n        var idstr = ids.join(',');\n        changeAll({\n          val: idstr,\n          field: 'status',\n          value: command\n        }).then(function (response) {\n          if (response.status === 1) {\n            _this.$message.success(response.msg);\n\n            _this.fetchList();\n          } else {\n            _this.$message.error(response.msg);\n          }\n        }).catch(function (error) {});\n      } else {\n        _this.$message.error('请选择要操作的数据');\n      }\n    }\n  }\n};",{"version":3,"sources":["rules.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 操作 -->\n    <el-row style=\"margin-bottom: 10px;\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"24\">\n        <el-tooltip content=\"刷新\" placement=\"top\">\n          <el-button v-waves type=\"warning\" icon=\"el-icon-refresh\" circle @click=\"handleFilterClear\"/>\n        </el-tooltip>\n        <el-tooltip content=\"添加\" placement=\"top\">\n          <el-button v-waves type=\"success\" icon=\"el-icon-plus\" circle @click=\"handleCreate\"/>\n        </el-tooltip>\n        <el-tooltip content=\"删除\" placement=\"top\">\n          <el-button v-waves :loading=\"deleting\" :disabled=\"buttonDisabled\" type=\"danger\" icon=\"el-icon-delete\" circle @click=\"handleDeleteAll()\"/>\n        </el-tooltip>\n        <el-tooltip content=\"更多\" placement=\"top\">\n          <el-dropdown trigger=\"click\" placement=\"bottom\" style=\"margin-left: 10px;\" @command=\"handleCommand\">\n            <el-button :disabled=\"buttonDisabled\" type=\"Info\" circle>\n              <i class=\"el-icon-more\"/>\n            </el-button>\n            <el-dropdown-menu slot=\"dropdown\" >\n              <el-dropdown-item command=\"1\">设为正常</el-dropdown-item>\n              <el-dropdown-item command=\"0\">设为禁用</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </el-tooltip>\n      </el-col>\n    </el-row>\n\n    <!-- 表格 -->\n    <tree-table\n      v-loading=\"listLoading\"\n      :key=\"tableKey\"\n      :data=\"getRulesList\"\n      :expand-all=\"expandAll\"\n      :columns=\"columns\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\"\n      @selection-change=\"handleSelectionChange\">\n      <el-table-column label=\"标识\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.name }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"图标\" width=\"80px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.icon }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"路径\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.path }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"组件\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.component }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"状态\" width=\"80px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span :class=\"{'el-icon-success text-green':scope.row.status == 1,'el-icon-error text-red':scope.row.status == 0}\" @click=\"handleModifyStatus(scope.$index,scope.row.id,scope.row.status)\">{{ scope.row.status | statusFilter }}</span>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"操作\" align=\"center\" width=\"120px\" class-name=\"small-padding\">\n        <template slot-scope=\"scope\">\n          <el-tooltip content=\"编辑\" placement=\"top\">\n            <el-button v-waves type=\"primary\" icon=\"el-icon-edit-outline\" circle @click=\"handleUpdate(scope.$index,scope.row.id)\"/>\n          </el-tooltip>\n          <el-tooltip content=\"删除\" placement=\"top\">\n            <el-button v-waves :loading=\"scope.row.delete\" type=\"danger\" icon=\"el-icon-delete\" circle @click=\"handleDelete(scope.$index,scope.row.id)\"/>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </tree-table>\n\n    <!-- 表单 -->\n    <rulesForm ref=\"fromRules\" :rule-list=\"list\" @updateRow=\"updateRow\"/>\n\n  </div>\n</template>\n\n<script>\nimport { getList, del, change, delAll, changeAll } from '@/api/rules'\nimport waves from '@/directive/waves' // 水波纹指令\nimport { getArrByKey } from '@/utils'\nimport tree from '@/utils/tree'\nimport rulesForm from './rules/form'\nimport treeTable from '@/components/TreeTable'\n\nexport default {\n  name: 'Rules',\n  components: { rulesForm, treeTable },\n  directives: {\n    waves\n  },\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        0: '禁用',\n        1: '正常'\n      }\n      return statusMap[status]\n    }\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      selectedRows: null,\n      listLoading: true,\n      expandAll: true,\n      columns: [\n        {\n          text: '名称',\n          value: 'title'\n        }\n      ],\n      listQuery: {\n        status: '-1',\n        title: ''\n      },\n      buttonDisabled: true,\n      deleting: false\n    }\n  },\n  computed: {\n    getRulesList() {\n      return tree.listToTreeMulti(this.list, 0, 'id', 'pid', 'children', { 'delete': false })\n    }\n  },\n  watch: {\n  },\n  created() {\n    this.fetchList()\n  },\n  methods: {\n    fetchList() {\n      this.listLoading = true\n      getList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.listLoading = false\n      })\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        status: '-1',\n        title: ''\n      }\n      this.fetchList()\n    },\n    handleSelectionChange(val) {\n      if (val.length > 0) {\n        this.buttonDisabled = false\n      } else {\n        this.buttonDisabled = true\n      }\n      this.selectedRows = val\n    },\n    handleCreate() {\n      this.$refs.fromRules.handleCreate()\n    },\n    handleUpdate(index, id) {\n      this.$refs.fromRules.handleUpdate(id)\n    },\n    handleModifyStatus(index, id, status) {\n      const statusObj = { 'status': 1 - status }\n      this.list = tree.upadteArr(this.list, 'id', id, statusObj)\n      change(id, 'status', 1 - status).then(response => {})\n    },\n    updateRow(temp) {\n      this.fetchList()\n    },\n    handleDelete(index, id) {\n      const _this = this\n      this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        const delObj = { 'delete': true }\n        _this.list = tree.upadteArr(_this.list, 'id', id, delObj)\n        del(id).then(response => {\n          if (response.status === 1) {\n            _this.$notify.success(response.msg)\n            _this.fetchList()\n          } else {\n            _this.$notify.error(response.msg)\n          }\n          const delObj = { 'delete': false }\n          _this.list = tree.upadteArr(_this.list, 'id', id, delObj)\n        }).catch((error) => {\n          const delObj = { 'delete': false }\n          _this.list = tree.upadteArr(_this.list, 'id', id, delObj)\n        })\n      }).catch(() => {\n        this.$message({\n          type: 'info',\n          message: '已取消删除'\n        })\n      })\n    },\n    handleDeleteAll() {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        this.$confirm('此操作将永久删除该记录, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          _this.deleting = true\n          const ids = getArrByKey(_this.selectedRows, 'id')\n          const idstr = ids.join(',')\n          delAll({ ids: idstr }).then(response => {\n            if (response.status === 1) {\n              _this.$message.success(response.msg)\n              _this.fetchList()\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.deleting = false\n          }).catch((error) => {\n            _this.deleting = false\n          })\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消删除'\n          })\n        })\n      } else {\n        _this.$message.error('请选择要删除的数据')\n      }\n    },\n    handleCommand(command) {\n      const _this = this\n      if (this.selectedRows.length > 0) {\n        const ids = getArrByKey(this.selectedRows, 'id')\n        const idstr = ids.join(',')\n        changeAll({ val: idstr, field: 'status', value: command }).then(response => {\n          if (response.status === 1) {\n            _this.$message.success(response.msg)\n            _this.fetchList()\n          } else {\n            _this.$message.error(response.msg)\n          }\n        }).catch((error) => {\n        })\n      } else {\n        _this.$message.error('请选择要操作的数据')\n      }\n    }\n  }\n}\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n\t.text-red{\n\t\tcolor: red;\n\t\tcursor: pointer;\n\t}\n\t.text-green{\n\t\tcolor: green;\n\t\tcursor: pointer;\n\t}\n</style>\n"],"sourceRoot":"src/views/manage"}]}