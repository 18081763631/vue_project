{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\log\\log.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\log\\log.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getList } from '@/api/log';\nimport waves from '@/directive/waves';\nimport { parseTime, pickerOptions } from '@/utils';\nexport default {\n  name: 'Log',\n  components: {},\n  directives: {\n    waves: waves\n  },\n  filters: {},\n  data: function data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: null,\n      listLoading: true,\n      showSearch: false,\n      listQuery: {\n        page: 1,\n        psize: 10,\n        uid: '',\n        userName: '',\n        loginIp: '',\n        startTime: '',\n        endTime: ''\n      },\n      dateTime: '',\n      pickerOptions: pickerOptions\n    };\n  },\n  watch: {\n    dateTime: function dateTime(val) {\n      this.listQuery.startTime = val[0];\n      this.listQuery.endTime = val[1];\n    }\n  },\n  created: function created() {\n    this.fetchList();\n  },\n  methods: {\n    fetchList: function fetchList() {\n      var _this = this;\n\n      this.listLoading = true;\n      getList(this.listQuery).then(function (response) {\n        _this.list = response.data.data;\n        _this.total = response.data.total;\n        _this.listLoading = false;\n      });\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.fetchList();\n    },\n    handleFilterClear: function handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        uid: '',\n        userName: '',\n        loginIp: '',\n        startTime: '',\n        endTime: ''\n      };\n      this.dateTime = '';\n      this.fetchList();\n    },\n    handleSizeChange: function handleSizeChange(val) {\n      this.listQuery.psize = val;\n      this.fetchList();\n    },\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.listQuery.page = val;\n      this.fetchList();\n    }\n  }\n};",{"version":3,"sources":["log.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA,SAAA,OAAA,QAAA,WAAA;AACA,OAAA,KAAA,MAAA,mBAAA;AACA,SAAA,SAAA,EAAA,aAAA,QAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GAHA;AAMA,EAAA,OAAA,EAAA,EANA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,IAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,WAAA,EAAA,IAJA;AAKA,MAAA,UAAA,EAAA,KALA;AAMA,MAAA,SAAA,EAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,SAAA,EAAA,EANA;AAOA,QAAA,OAAA,EAAA;AAPA,OANA;AAeA,MAAA,QAAA,EAAA,EAfA;AAgBA,MAAA,aAAA,EAAA;AAhBA,KAAA;AAkBA,GA3BA;AA4BA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,GAAA,EAAA;AACA,WAAA,SAAA,CAAA,SAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA,WAAA,SAAA,CAAA,OAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AACA;AAJA,GA5BA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,SAAA,SAAA;AACA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,OAAA,CAAA,KAAA,SAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAAA;AACA,QAAA,KAAA,CAAA,KAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAJA;AAKA,KARA;AASA,IAAA,YATA,0BASA;AACA,WAAA,SAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,SAAA;AACA,KAZA;AAaA,IAAA,iBAbA,+BAaA;AACA,WAAA,SAAA,GAAA;AACA,QAAA,IAAA,EAAA,CADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,GAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,SAAA,EAAA,EANA;AAOA,QAAA,OAAA,EAAA;AAPA,OAAA;AASA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,SAAA;AACA,KAzBA;AA0BA,IAAA,gBA1BA,4BA0BA,GA1BA,EA0BA;AACA,WAAA,SAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,SAAA;AACA,KA7BA;AA8BA,IAAA,mBA9BA,+BA8BA,GA9BA,EA8BA;AACA,WAAA,SAAA,CAAA,IAAA,GAAA,GAAA;AACA,WAAA,SAAA;AACA;AAjCA;AArCA,CAAA","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!-- 搜索 -->\n    <div v-if=\"showSearch\" class=\"filter-container\">\n      <el-form :inline=\"true\" :model=\"listQuery\" class=\"form-inline\">\n        <el-form-item label=\"\">\n          <el-input v-model=\"listQuery.uid\" placeholder=\"用ID\" clearable size=\"small\"/>\n        </el-form-item>\n        <el-form-item label=\"\">\n          <el-input v-model=\"listQuery.userName\" placeholder=\"用户名\" clearable size=\"small\"/>\n        </el-form-item>\n        <el-form-item label=\"\">\n          <el-input v-model=\"listQuery.loginIp\" placeholder=\"登录IP\" clearable size=\"small\"/>\n        </el-form-item>\n        <el-form-item label=\"\">\n          <el-date-picker v-model=\"dateTime\" :picker-options=\"pickerOptions\" type=\"daterange\" range-separator=\"至\" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" value-format=\"yyyy-MM-dd\" align=\"right\" clearable size=\"small\"/>\n        </el-form-item>\n        <el-form-item>\n          <el-button v-waves type=\"primary\" icon=\"el-icon-search\" size=\"small\" @click=\"handleFilter\">搜索</el-button>\n        </el-form-item>\n        <el-form-item>\n          <el-button v-waves type=\"warning\" icon=\"el-icon-refresh\" size=\"small\" @click=\"handleFilterClear\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 操作 -->\n    <el-row style=\"margin-bottom: 10px;\">\n      <el-col :xs=\"24\" :sm=\"24\" :lg=\"24\">\n        <el-tooltip content=\"刷新\" placement=\"top\">\n          <el-button v-waves type=\"warning\" icon=\"el-icon-refresh\" circle @click=\"handleFilterClear\"/>\n        </el-tooltip>\n        <el-tooltip content=\"搜索\" placement=\"top\">\n          <el-button v-waves type=\"primary\" icon=\"el-icon-search\" circle @click=\"showSearch = !showSearch\"/>\n        </el-tooltip>\n      </el-col>\n    </el-row>\n\n    <!-- 表格 -->\n    <el-table\n      v-loading=\"listLoading\"\n      :key=\"tableKey\"\n      :data=\"list\"\n      border\n      fit\n      highlight-current-row\n      style=\"width: 100%;\">\n      <el-table-column label=\"ID\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.id }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"用户ID\" width=\"100px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.uid }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"用户名\" min-width=\"100px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.userName }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"角色\" width=\"150px\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.roles }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"登录IP\" width=\"150px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.loginIp }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"登录时间\" width=\"160px\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.loginTime|parseTime('{y}-{m}-{d} {h}:{i}:{s}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination v-show=\"total>0\" :current-page=\"listQuery.page\" :page-sizes=\"[10,20,30, 50]\" :page-size=\"listQuery.psize\" :total=\"total\" background layout=\"total, sizes, prev, pager, next, jumper\" @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getList } from '@/api/log'\nimport waves from '@/directive/waves'\nimport { parseTime, pickerOptions } from '@/utils'\n\nexport default {\n  name: 'Log',\n  components: { },\n  directives: {\n    waves\n  },\n  filters: {\n  },\n  data() {\n    return {\n      tableKey: 0,\n      list: null,\n      total: null,\n      listLoading: true,\n      showSearch: false,\n      listQuery: {\n        page: 1,\n        psize: 10,\n        uid: '',\n        userName: '',\n        loginIp: '',\n        startTime: '',\n        endTime: ''\n      },\n      dateTime: '',\n      pickerOptions: pickerOptions\n    }\n  },\n  watch: {\n    dateTime: function(val) {\n      this.listQuery.startTime = val[0]\n      this.listQuery.endTime = val[1]\n    }\n  },\n  created() {\n    this.fetchList()\n  },\n  methods: {\n    fetchList() {\n      this.listLoading = true\n      getList(this.listQuery).then(response => {\n        this.list = response.data.data\n        this.total = response.data.total\n        this.listLoading = false\n      })\n    },\n    handleFilter() {\n      this.listQuery.page = 1\n      this.fetchList()\n    },\n    handleFilterClear() {\n      this.listQuery = {\n        page: 1,\n        psize: 10,\n        uid: '',\n        userName: '',\n        loginIp: '',\n        startTime: '',\n        endTime: ''\n      }\n      this.dateTime = ''\n      this.fetchList()\n    },\n    handleSizeChange(val) {\n      this.listQuery.psize = val\n      this.fetchList()\n    },\n    handleCurrentChange(val) {\n      this.listQuery.page = val\n      this.fetchList()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/log"}]}