{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\Upload\\image.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\Upload\\image.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getArrByKey } from '@/utils';\nimport openWindow from '@/utils/openWindow';\nexport default {\n  name: 'ImageUpload',\n  props: {\n    value: {\n      type: Array,\n      default: []\n    },\n    config: {\n      type: Object,\n      default: {\n        fileName: 'file',\n        limit: 5,\n        multiple: false,\n        accept: 'image/*',\n        action: '',\n        drag: false\n      }\n    }\n  },\n  data: function data() {\n    return {\n      limit: this.config.limit,\n      fileName: this.config.fileName,\n      multiple: this.config.multiple,\n      accept: this.config.accept,\n      action: this.config.action,\n      drag: this.config.drag,\n      dataobj: {\n        filename: this.config.fileName\n      }\n    };\n  },\n  computed: {\n    fileList: function fileList() {\n      var imgarr = [];\n\n      if (this.value === '') {\n        return [];\n      }\n\n      if (typeof this.value === 'string') {\n        this.value = this.value.split(',');\n      }\n\n      for (var i = 0; i < this.value.length; i++) {\n        imgarr.push({\n          url: this.value[i]\n        });\n      }\n\n      return imgarr;\n    }\n  },\n  methods: {\n    emitInput: function emitInput(val) {\n      this.$emit('input', val);\n    },\n    handleRemove: function handleRemove(file, fileList) {\n      if (fileList.length > 0) {\n        this.emitInput(getArrByKey(fileList, 'url'));\n      } else {\n        this.emitInput([]);\n      }\n    },\n    handlePreview: function handlePreview(file) {\n      openWindow(file.url, '图片预览', '500', '400');\n    },\n    handleExceed: function handleExceed(files, fileList) {\n      this.$message.error('最多上传' + this.limit + '张图片');\n    },\n    beforeUpload: function beforeUpload(file) {\n      var isIMG = file.type === 'image/jpeg' || file.type === 'image/png';\n      var isLt5M = file.size / 1024 / 1024 < 5;\n\n      if (!isIMG) {\n        this.$message.error('上传图片只能是 JPG、PNG 格式!');\n        return false;\n      }\n\n      if (!isLt5M) {\n        this.$message.error('上传图片大小不能超过 5MB!');\n        return false;\n      }\n\n      return isIMG && isLt5M;\n    },\n    onProgress: function onProgress(event, file, fileList) {\n      console.log('========onProgress=========');\n      console.log(event, file, fileList);\n      console.log('========onProgress=========');\n    },\n    handleSuccess: function handleSuccess(res, file, fileList) {\n      if (res.status === 1) {\n        for (var i = 0; i < fileList.length; i++) {\n          if (fileList[i]['uid'] === file['uid']) {\n            fileList[i]['url'] = res.data.url;\n            break;\n          }\n        }\n\n        this.emitInput(getArrByKey(fileList, 'url'));\n      } else {\n        for (var _i = 0; _i < fileList.length; _i++) {\n          if (fileList[_i]['uid'] === file['uid']) {\n            fileList.splice(_i, 1);\n            break;\n          }\n        }\n\n        this.$message.error(res.msg);\n      }\n    },\n    handleError: function handleError(err, file, fileList) {\n      this.$message.error(err);\n    }\n  }\n};",{"version":3,"sources":["image.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"upload-container\">\n    <el-upload\n      :show-file-list=\"true\"\n      :data=\"dataobj\"\n      :action=\"action\"\n      :multiple=\"multiple\"\n      :name=\"fileName\"\n      :accept=\"accept\"\n      :drag=\"drag\"\n      :limit=\"limit\"\n      :file-list=\"fileList\"\n      :on-preview=\"handlePreview\"\n      :on-exceed=\"handleExceed\"\n      :before-upload=\"beforeUpload\"\n      :on-progress=\"onProgress\"\n      :on-success=\"handleSuccess\"\n      :on-error=\"handleError\"\n      :on-remove=\"handleRemove\"\n      class=\"image-uploader\"\n      list-type=\"picture-card\">\n      <i class=\"el-icon-plus\"/>\n    </el-upload>\n  </div>\n</template>\n\n<script>\nimport { getArrByKey } from '@/utils'\nimport openWindow from '@/utils/openWindow'\nexport default {\n  name: 'ImageUpload',\n  props: {\n    value: {\n      type: Array,\n      default: []\n    },\n    config: {\n      type: Object,\n      default: {\n        fileName: 'file',\n        limit: 5,\n        multiple: false,\n        accept: 'image/*',\n        action: '',\n        drag: false\n      }\n    }\n  },\n  data() {\n    return {\n      limit: this.config.limit,\n      fileName: this.config.fileName,\n      multiple: this.config.multiple,\n      accept: this.config.accept,\n      action: this.config.action,\n      drag: this.config.drag,\n      dataobj: { filename: this.config.fileName }\n    }\n  },\n  computed: {\n    fileList() {\n      const imgarr = []\n      if (this.value === '') {\n        return []\n      }\n      if (typeof (this.value) === 'string') {\n        this.value = this.value.split(',')\n      }\n      for (let i = 0; i < this.value.length; i++) {\n        imgarr.push({ url: this.value[i] })\n      }\n      return imgarr\n    }\n\n  },\n  methods: {\n    emitInput(val) {\n      this.$emit('input', val)\n    },\n    handleRemove(file, fileList) {\n      if (fileList.length > 0) {\n        this.emitInput(getArrByKey(fileList, 'url'))\n      } else {\n        this.emitInput([])\n      }\n    },\n    handlePreview(file) {\n      openWindow(file.url, '图片预览', '500', '400')\n    },\n    handleExceed(files, fileList) {\n      this.$message.error('最多上传' + this.limit + '张图片')\n    },\n    beforeUpload(file) {\n      const isIMG = file.type === 'image/jpeg' || file.type === 'image/png'\n      const isLt5M = file.size / 1024 / 1024 < 5\n      if (!isIMG) {\n        this.$message.error('上传图片只能是 JPG、PNG 格式!')\n        return false\n      }\n      if (!isLt5M) {\n        this.$message.error('上传图片大小不能超过 5MB!')\n        return false\n      }\n      return isIMG && isLt5M\n    },\n    onProgress(event, file, fileList) {\n      console.log('========onProgress=========')\n      console.log(event, file, fileList)\n      console.log('========onProgress=========')\n    },\n    handleSuccess(res, file, fileList) {\n      if (res.status === 1) {\n        for (let i = 0; i < fileList.length; i++) {\n          if (fileList[i]['uid'] === file['uid']) {\n            fileList[i]['url'] = res.data.url\n            break\n          }\n        }\n        this.emitInput(getArrByKey(fileList, 'url'))\n      } else {\n        for (let i = 0; i < fileList.length; i++) {\n          if (fileList[i]['uid'] === file['uid']) {\n            fileList.splice(i, 1)\n            break\n          }\n        }\n        this.$message.error(res.msg)\n      }\n    },\n    handleError(err, file, fileList) {\n      this.$message.error(err)\n    }\n\n  }\n}\n</script>\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n\t.image-uploader {\n\t\t.el-upload {\n\t\t\tborder: 1px dashed #d9d9d9;\n\t\t\tborder-radius: 6px;\n\t\t\tcursor: pointer;\n\t\t\tposition: relative;\n\t\t\toverflow: hidden;\n\t\t\twidth: 160px;\n\t\t\theight: 160px;\n\t\t\t.el-upload-dragger{\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t\t&:hover{\n\t\t\t\tborder-color: #409EFF;\n\t\t\t}\n\t\t}\n\t\t.el-upload-list__item{\n\t\t\twidth: 160px;\n\t\t\theight: 160px;\n\t\t}\n\t\t.image {\n\t\t\twidth: 178px;\n\t\t\theight: 178px;\n\t\t\tdisplay: block;\n\t\t}\n\t\t.image-uploader-icon {\n\t\t\tfont-size: 28px;\n\t\t\tcolor: #8c939d;\n\t\t\twidth: 178px;\n\t\t\theight: 178px;\n\t\t\tline-height: 178px;\n\t\t\ttext-align: center;\n\t\t}\n\n\t}\n</style>\n"],"sourceRoot":"src/components/Upload"}]}