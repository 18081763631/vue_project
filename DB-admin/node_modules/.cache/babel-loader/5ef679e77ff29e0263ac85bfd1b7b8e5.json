{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\admin\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\admin\\form.vue","mtime":1593609155454},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:/Users/lenovo/Desktop/vue-admin/node_modules/@babel/runtime/helpers/esm/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Upload from '@/components/Upload/image';\nimport { getListAll } from '@/api/roles';\nimport { getinfo, save } from '@/api/admin';\nimport { formatImgToArr, getNowTime } from '@/utils';\nimport { validatePhone, validateEmail } from '@/utils/validate';\nimport myconfig from '@/config';\nexport default {\n  name: 'AdminForm',\n  components: {\n    Upload: Upload\n  },\n  data: function data() {\n    var checkPhone = function checkPhone(rule, value, callback) {\n      if (validatePhone(value)) {\n        callback();\n      } else {\n        return callback(new Error());\n      }\n    };\n\n    var checkEmail = function checkEmail(rule, value, callback) {\n      if (validateEmail(value)) {\n        callback();\n      } else {\n        return callback(new Error());\n      }\n    };\n\n    return {\n      btnLoading: false,\n      roles: {},\n      temp: {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        groupId: [{\n          required: true,\n          message: '角色必选',\n          trigger: 'change'\n        }],\n        userName: [{\n          required: true,\n          message: '账号必填',\n          trigger: 'blur'\n        }],\n        phone: [{\n          validator: checkPhone,\n          message: '手机号格式错误',\n          trigger: 'blur'\n        }],\n        email: [{\n          validator: checkEmail,\n          message: '邮箱格式错误',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  watch: {\n    dialogFormVisible: function dialogFormVisible() {\n      this.resetTemp();\n    },\n    temp: {\n      handler: function handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created: function created() {\n    this.getRoles();\n  },\n  destroyed: function destroyed() {},\n  methods: {\n    getRoles: function getRoles() {\n      var _this2 = this;\n\n      getListAll().then(function (response) {\n        _this2.roles = response.data;\n      });\n    },\n    resetTemp: function resetTemp() {\n      this.temp = {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      };\n    },\n    handleCreate: function handleCreate() {\n      var _this3 = this;\n\n      this.dialogStatus = 'create';\n      this.dialogFormVisible = true;\n      this.currentIndex = -1;\n      this.$nextTick(function () {\n        _this3.$refs['dataForm'].clearValidate();\n      });\n    },\n    handleUpdate: function handleUpdate(id) {\n      var _this4 = this;\n\n      this.dialogStatus = 'update';\n      this.dialogFormVisible = true;\n\n      var _this = this;\n\n      getinfo(id).then(function (response) {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id;\n          _this.temp.groupId = response.data.groupId;\n          _this.temp.userName = response.data.userName;\n          _this.temp.realName = response.data.realName;\n          _this.temp.isEnabled = response.data.isEnabled;\n          _this.temp.phone = response.data.phone;\n          _this.temp.email = response.data.email;\n          _this.temp.password = '';\n          _this.temp.img = formatImgToArr(response.data.img);\n        }\n      });\n      this.$nextTick(function () {\n        _this4.$refs['dataForm'].clearValidate();\n      });\n    },\n    saveData: function saveData() {\n      var _this5 = this;\n\n      this.btnLoading = true;\n      this.$refs['dataForm'].validate(function (valid) {\n        if (valid) {\n          var _this = _this5;\n          var d = _this5.temp;\n\n          if (_typeof(d.img) === 'object') {\n            d.img = d.img.join(',');\n          }\n\n          save(d).then(function (response) {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id;\n              } // todo\n\n\n              _this5.$emit('updateRow', d);\n\n              _this.dialogFormVisible = false;\n\n              _this.$message.success(response.msg);\n            } else {\n              _this.$message.error(response.msg);\n            }\n\n            _this.btnLoading = false;\n          }).catch(function (error) {\n            _this5.btnLoading = false;\n          });\n        } else {\n          _this5.btnLoading = false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["form.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n    <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 100%; height: 50vh;overflow-y: scroll;\">\n      <el-form-item label=\"角色\" prop=\"groupId\">\n        <el-select v-model=\"temp.groupId\" class=\"filter-item\" placeholder=\"请选择\">\n          <el-option v-for=\"item in roles\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"账号\" prop=\"userName\">\n        <el-input v-model=\"temp.userName\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input v-model=\"temp.password\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"头像\" prop=\"img\">\n        <Upload v-model=\"temp.img\" :config=\"config\"/>\n      </el-form-item>\n      <el-form-item label=\"姓名\" prop=\"realName\">\n        <el-input v-model=\"temp.realName\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"手机\" prop=\"phone\">\n        <el-input v-model=\"temp.phone\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"temp.email\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"状态\">\n        <el-radio-group v-model=\"temp.isEnabled\">\n          <el-radio :label=\"1\">正常</el-radio>\n          <el-radio :label=\"0\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n      <el-button :loading=\"btnLoading\" type=\"primary\" @click=\"saveData()\">保存</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport Upload from '@/components/Upload/image'\nimport { getListAll } from '@/api/roles'\nimport { getinfo, save } from '@/api/admin'\nimport { formatImgToArr, getNowTime } from '@/utils'\nimport { validatePhone, validateEmail } from '@/utils/validate'\nimport myconfig from '@/config'\n\nexport default {\n  name: 'AdminForm',\n  components: { Upload },\n  data() {\n    var checkPhone = (rule, value, callback) => {\n      if (validatePhone(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    var checkEmail = (rule, value, callback) => {\n      if (validateEmail(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    return {\n      btnLoading: false,\n      roles: {},\n      temp: {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        groupId: [{ required: true, message: '角色必选', trigger: 'change' }],\n        userName: [{ required: true, message: '账号必填', trigger: 'blur' }],\n        phone: [{ validator: checkPhone, message: '手机号格式错误', trigger: 'blur' }],\n        email: [{ validator: checkEmail, message: '邮箱格式错误', trigger: 'blur' }]\n      }\n\n    }\n  },\n  watch: {\n    dialogFormVisible: function() {\n      this.resetTemp()\n    },\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n    this.getRoles()\n  },\n  destroyed() {\n\n  },\n  methods: {\n    getRoles() {\n      getListAll().then(response => {\n        this.roles = response.data\n      })\n    },\n    resetTemp() {\n      this.temp = {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      }\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.currentIndex = -1\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleUpdate(id) {\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      const _this = this\n      getinfo(id).then(response => {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id\n          _this.temp.groupId = response.data.groupId\n          _this.temp.userName = response.data.userName\n          _this.temp.realName = response.data.realName\n          _this.temp.isEnabled = response.data.isEnabled\n          _this.temp.phone = response.data.phone\n          _this.temp.email = response.data.email\n          _this.temp.password = ''\n          _this.temp.img = formatImgToArr(response.data.img)\n        }\n      })\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          if (typeof (d.img) === 'object') {\n            d.img = d.img.join(',')\n          }\n          save(d).then(response => {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id\n              }\n              // todo\n              this.$emit('updateRow', d)\n              _this.dialogFormVisible = false\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/manage/admin"}]}