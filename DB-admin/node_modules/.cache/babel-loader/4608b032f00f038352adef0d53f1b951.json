{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\Screenfull\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\components\\Screenfull\\index.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nimport screenfull from 'screenfull';\nexport default {\n  name: 'Screenfull',\n  data: function data() {\n    return {\n      isFullscreen: false\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n  },\n  methods: {\n    click: function click() {\n      if (!screenfull.enabled) {\n        this.$message({\n          message: 'you browser can not work',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      screenfull.toggle();\n    },\n    init: function init() {\n      var _this = this;\n\n      if (screenfull.enabled) {\n        screenfull.on('change', function () {\n          _this.isFullscreen = screenfull.isFullscreen;\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;AAOA,OAAA,UAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,IAAA;AACA,GATA;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,UAAA,CAAA,UAAA,CAAA,OAAA,EAAA;AACA,aAAA,QAAA,CAAA;AACA,UAAA,OAAA,EAAA,0BADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA,eAAA,KAAA;AACA;;AACA,MAAA,UAAA,CAAA,MAAA;AACA,KAVA;AAWA,IAAA,IAXA,kBAWA;AAAA;;AACA,UAAA,UAAA,CAAA,OAAA,EAAA;AACA,QAAA,UAAA,CAAA,EAAA,CAAA,QAAA,EAAA,YAAA;AACA,UAAA,KAAA,CAAA,YAAA,GAAA,UAAA,CAAA,YAAA;AACA,SAFA;AAGA;AACA;AAjBA;AAVA,CAAA","sourcesContent":["<template>\n  <div>\n    <svg-icon :icon-class=\"isFullscreen?'exit-fullscreen':'fullscreen'\" @click=\"click\" />\n  </div>\n</template>\n\n<script>\nimport screenfull from 'screenfull'\n\nexport default {\n  name: 'Screenfull',\n  data() {\n    return {\n      isFullscreen: false\n    }\n  },\n  mounted() {\n    this.init()\n  },\n  methods: {\n    click() {\n      if (!screenfull.enabled) {\n        this.$message({\n          message: 'you browser can not work',\n          type: 'warning'\n        })\n        return false\n      }\n      screenfull.toggle()\n    },\n    init() {\n      if (screenfull.enabled) {\n        screenfull.on('change', () => {\n          this.isFullscreen = screenfull.isFullscreen\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.screenfull-svg {\n  display: inline-block;\n  cursor: pointer;\n  fill: #5a5e66;;\n  width: 20px;\n  height: 20px;\n  vertical-align: 10px;\n}\n</style>\n"],"sourceRoot":"src/components/Screenfull"}]}