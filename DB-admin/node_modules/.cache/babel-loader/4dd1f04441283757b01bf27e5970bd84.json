{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\utils\\request.js","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '@/store';\nimport myconfig from '@/config';\nimport { getToken, removeToken, getSignature } from '@/utils/auth';\nimport qs from 'qs';\nvar baseURL = process.env.NODE_ENV === 'production' ? myconfig.baseUrl.pro : myconfig.baseUrl.dev; // create an axios instance\n\nvar service = axios.create({\n  baseURL: baseURL,\n  // api 的 base_url\n  timeout: 10000,\n  // request timeout,\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\n  }\n}); // request interceptor\n\nservice.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  // 在请求发出之前进行一些操作\n  config.headers['x-access-appid'] = myconfig.appid;\n\n  if (store.getters.token) {\n    // token\n    config.headers['x-access-token'] = getToken();\n  }\n\n  if (config.method === 'post') {\n    config.data = getSignature(config.data);\n    config.data = qs.stringify(config.data);\n  } else if (config.method === 'get') {\n    config.params = getSignature(config.params);\n  }\n\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.log(error); // for debug\n\n  Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use( // response => response,\n\n/**\n * 下面的注释为通过在response里，自定义code来标示请求状态\n * 当code返回如下情况则说明权限有问题，登出并返回到登录页\n * 如想通过 xmlhttprequest 来状态码标识 逻辑可写在下面error中\n * 以下代码均为样例，请结合自生需求加以修改，若不需要，则可删除\n */\nfunction (response) {\n  var res = response.data;\n\n  if (res.code !== 10000) {\n    Message({\n      message: res.msg,\n      type: 'error',\n      duration: 5 * 1000\n    }); // token 过期了\n\n    if (res.code === 10305 || res.code === 10307) {\n      MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        store.dispatch('FedLogOut').then(function () {\n          // 清空token\n          removeToken();\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    }\n\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  Message({\n    message: '网络异常',\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["C:/Users/lenovo/Desktop/vue-admin/src/utils/request.js"],"names":["axios","Message","MessageBox","store","myconfig","getToken","removeToken","getSignature","qs","baseURL","process","env","NODE_ENV","baseUrl","pro","dev","service","create","timeout","headers","interceptors","request","use","config","appid","getters","token","method","data","stringify","params","error","console","log","Promise","reject","response","res","code","message","msg","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { Message, MessageBox } from 'element-ui'\nimport store from '@/store'\nimport myconfig from '@/config'\nimport { getToken, removeToken, getSignature } from '@/utils/auth'\nimport qs from 'qs'\n\nconst baseURL = process.env.NODE_ENV === 'production'\n  ? myconfig.baseUrl.pro\n  : myconfig.baseUrl.dev\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: baseURL, // api 的 base_url\n  timeout: 10000, // request timeout,\n  headers: { 'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8' }\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // Do something before request is sent\n    // 在请求发出之前进行一些操作\n    config.headers['x-access-appid'] = myconfig.appid\n\n    if (store.getters.token) {\n      // token\n      config.headers['x-access-token'] = getToken()\n    }\n    if (config.method === 'post') {\n      config.data = getSignature(config.data)\n      config.data = qs.stringify(config.data)\n    } else if (config.method === 'get') {\n      config.params = getSignature(config.params)\n    }\n    return config\n  },\n  error => {\n    // Do something with request error\n    console.log(error) // for debug\n    Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  // response => response,\n  /**\n   * 下面的注释为通过在response里，自定义code来标示请求状态\n   * 当code返回如下情况则说明权限有问题，登出并返回到登录页\n   * 如想通过 xmlhttprequest 来状态码标识 逻辑可写在下面error中\n   * 以下代码均为样例，请结合自生需求加以修改，若不需要，则可删除\n   */\n  response => {\n    const res = response.data\n    if (res.code !== 10000) {\n      Message({\n        message: res.msg,\n        type: 'error',\n        duration: 5 * 1000\n      })\n      // token 过期了\n      if (res.code === 10305 || res.code === 10307) {\n        MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n          confirmButtonText: '重新登录',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          store.dispatch('FedLogOut').then(() => {\n            // 清空token\n            removeToken()\n            location.reload() // 为了重新实例化vue-router对象 避免bug\n          })\n        })\n      }\n      return Promise.reject('error')\n    } else {\n      return response.data\n    }\n  },\n  error => {\n    Message({\n      message: '网络异常',\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"]}]}