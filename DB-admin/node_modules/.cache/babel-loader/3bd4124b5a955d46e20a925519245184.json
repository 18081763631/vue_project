{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\utils\\auth.js","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\utils\\auth.js","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _typeof from \"C:/Users/lenovo/Desktop/vue-admin/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport Cookies from 'js-cookie';\nimport crypto from 'crypto';\nimport qs from 'qs';\nimport myconfig from '@/config';\nvar TokenKey = 'Admin-Token';\nexport function getToken() {\n  return Cookies.get(TokenKey);\n}\nexport function setToken(token) {\n  return Cookies.set(TokenKey, token, {\n    expires: myconfig.cookieExpires\n  });\n}\nexport function removeToken() {\n  return Cookies.remove(TokenKey);\n} // 数据加密\n\nfunction getEncrypt(obj, signKey) {\n  var arr = [];\n  var keys = [];\n\n  for (var i in obj) {\n    if (_typeof(obj[i]) !== 'object' && i !== 'signature') {\n      keys.push(i);\n    }\n  }\n\n  keys.sort();\n\n  for (var _i in keys) {\n    arr[keys[_i]] = obj[keys[_i]];\n  }\n\n  var arr_str = qs.stringify(arr);\n  var arr_sha1 = crypto.createHash('sha1').update(arr_str).digest('hex');\n  arr_sha1 = arr_sha1 + signKey;\n  return crypto.createHash('md5').update(arr_sha1).digest('hex');\n} // 数据签名\n\n\nexport function getSignature(obj) {\n  var encrypt = {};\n\n  if (obj) {\n    encrypt = obj;\n  } // 签名\n\n\n  var signature = getEncrypt(encrypt, myconfig.appSecret);\n  encrypt.signature = signature;\n  return encrypt;\n}",{"version":3,"sources":["C:/Users/lenovo/Desktop/vue-admin/src/utils/auth.js"],"names":["Cookies","crypto","qs","myconfig","TokenKey","getToken","get","setToken","token","set","expires","cookieExpires","removeToken","remove","getEncrypt","obj","signKey","arr","keys","i","push","sort","arr_str","stringify","arr_sha1","createHash","update","digest","getSignature","encrypt","signature","appSecret"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,QAAQ,GAAG,aAAjB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOL,OAAO,CAACM,GAAR,CAAYF,QAAZ,CAAP;AACD;AAED,OAAO,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAOR,OAAO,CAACS,GAAR,CAAYL,QAAZ,EAAsBI,KAAtB,EAA4B;AAAEE,IAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAApB,GAA5B,CAAP;AACD;AAED,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAOZ,OAAO,CAACa,MAAR,CAAeT,QAAf,CAAP;AACD,C,CAED;;AACA,SAASU,UAAT,CAAoBC,GAApB,EAAyBC,OAAzB,EAAkC;AAChC,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,IAAI,GAAG,EAAb;;AACA,OAAK,IAAMC,CAAX,IAAgBJ,GAAhB,EAAqB;AACnB,QAAI,QAAOA,GAAG,CAACI,CAAD,CAAV,MAAkB,QAAlB,IAA8BA,CAAC,KAAK,WAAxC,EAAqD;AACnDD,MAAAA,IAAI,CAACE,IAAL,CAAUD,CAAV;AACD;AACF;;AACDD,EAAAA,IAAI,CAACG,IAAL;;AACA,OAAK,IAAMF,EAAX,IAAgBD,IAAhB,EAAsB;AACpBD,IAAAA,GAAG,CAACC,IAAI,CAACC,EAAD,CAAL,CAAH,GAAeJ,GAAG,CAACG,IAAI,CAACC,EAAD,CAAL,CAAlB;AACD;;AACD,MAAMG,OAAO,GAAGpB,EAAE,CAACqB,SAAH,CAAaN,GAAb,CAAhB;AACA,MAAIO,QAAQ,GAAGvB,MAAM,CAACwB,UAAP,CAAkB,MAAlB,EAA0BC,MAA1B,CAAiCJ,OAAjC,EAA0CK,MAA1C,CAAiD,KAAjD,CAAf;AACAH,EAAAA,QAAQ,GAAGA,QAAQ,GAAGR,OAAtB;AACA,SAAOf,MAAM,CAACwB,UAAP,CAAkB,KAAlB,EAAyBC,MAAzB,CAAgCF,QAAhC,EAA0CG,MAA1C,CAAiD,KAAjD,CAAP;AACD,C,CAED;;;AACA,OAAO,SAASC,YAAT,CAAsBb,GAAtB,EAA2B;AAChC,MAAIc,OAAO,GAAG,EAAd;;AACA,MAAId,GAAJ,EAAS;AACPc,IAAAA,OAAO,GAAGd,GAAV;AACD,GAJ+B,CAKhC;;;AACA,MAAMe,SAAS,GAAGhB,UAAU,CAACe,OAAD,EAAU1B,QAAQ,CAAC4B,SAAnB,CAA5B;AACAF,EAAAA,OAAO,CAACC,SAAR,GAAoBA,SAApB;AACA,SAAOD,OAAP;AACD","sourcesContent":["import Cookies from 'js-cookie'\nimport crypto from 'crypto'\nimport qs from 'qs'\nimport myconfig from '@/config'\n\nconst TokenKey = 'Admin-Token'\n\nexport function getToken() {\n  return Cookies.get(TokenKey)\n}\n\nexport function setToken(token) {\n  return Cookies.set(TokenKey, token,{ expires: myconfig.cookieExpires })\n}\n\nexport function removeToken() {\n  return Cookies.remove(TokenKey)\n}\n\n// 数据加密\nfunction getEncrypt(obj, signKey) {\n  const arr = []\n  const keys = []\n  for (const i in obj) {\n    if (typeof obj[i] !== 'object' && i !== 'signature') {\n      keys.push(i)\n    }\n  }\n  keys.sort()\n  for (const i in keys) {\n    arr[keys[i]] = obj[keys[i]]\n  }\n  const arr_str = qs.stringify(arr)\n  let arr_sha1 = crypto.createHash('sha1').update(arr_str).digest('hex')\n  arr_sha1 = arr_sha1 + signKey\n  return crypto.createHash('md5').update(arr_sha1).digest('hex')\n}\n\n// 数据签名\nexport function getSignature(obj) {\n  let encrypt = {}\n  if (obj) {\n    encrypt = obj\n  }\n  // 签名\n  const signature = getEncrypt(encrypt, myconfig.appSecret)\n  encrypt.signature = signature\n  return encrypt\n}\n\n"]}]}