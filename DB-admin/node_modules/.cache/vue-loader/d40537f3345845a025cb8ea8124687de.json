{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\info.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\info.vue","mtime":1585839394000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Upload from '@/components/Upload/image'\nimport { modify } from '@/api/admin'\nimport { mapGetters } from 'vuex'\nimport store from '@/store'\nimport myconfig from '@/config'\n\nexport default {\n  name: 'MyInfo',\n  components: { Upload },\n  data() {\n    return {\n      btnLoading: false,\n      temp: {\n        password: '',\n        realName: store.getters.realName,\n        phone: store.getters.phone,\n        email: store.getters.email,\n        img: [store.getters.avatar]\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      }\n\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'name',\n      'group'\n    ])\n  },\n  watch: {\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n\n  },\n  destroyed() {\n\n  },\n  methods: {\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          if (typeof (d.img) === 'object') {\n            d.img = d.img.join(',')\n          }\n          modify(d).then(response => {\n            if (response.status === 1) {\n              store.commit('SET_AVATAR', _this.temp.img)\n              store.commit('SET_REALNAME', _this.temp.realName)\n              store.commit('SET_PHONE', _this.temp.phone)\n              store.commit('SET_EMAIL', _this.temp.email)\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"info.vue","sourceRoot":"src/views/manage","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form ref=\"dataForm\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 100%; \">\n      <el-form-item label=\"角色\" prop=\"groupId\">\n        <el-input v-model=\"group\" :disabled=\"true\"/>\n      </el-form-item>\n      <el-form-item label=\"账号\" prop=\"userName\">\n        <el-input v-model=\"name\" :disabled=\"true\"/>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input v-model=\"temp.password\" clearable placeholder=\"不修改，则留空\"/>\n      </el-form-item>\n      <el-form-item label=\"头像\" prop=\"img\">\n        <Upload v-model=\"temp.img\" :config=\"config\"/>\n      </el-form-item>\n      <el-form-item label=\"姓名\" prop=\"realName\">\n        <el-input v-model=\"temp.realName\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"手机\" prop=\"phone\">\n        <el-input v-model=\"temp.phone\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"temp.email\" clearable/>\n      </el-form-item>\n    </el-form>\n    <el-button :loading=\"btnLoading\" type=\"primary\" @click=\"saveData()\">保存</el-button>\n  </div>\n</template>\n\n<script>\nimport Upload from '@/components/Upload/image'\nimport { modify } from '@/api/admin'\nimport { mapGetters } from 'vuex'\nimport store from '@/store'\nimport myconfig from '@/config'\n\nexport default {\n  name: 'MyInfo',\n  components: { Upload },\n  data() {\n    return {\n      btnLoading: false,\n      temp: {\n        password: '',\n        realName: store.getters.realName,\n        phone: store.getters.phone,\n        email: store.getters.email,\n        img: [store.getters.avatar]\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      }\n\n    }\n  },\n  computed: {\n    ...mapGetters([\n      'name',\n      'group'\n    ])\n  },\n  watch: {\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n\n  },\n  destroyed() {\n\n  },\n  methods: {\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          if (typeof (d.img) === 'object') {\n            d.img = d.img.join(',')\n          }\n          modify(d).then(response => {\n            if (response.status === 1) {\n              store.commit('SET_AVATAR', _this.temp.img)\n              store.commit('SET_REALNAME', _this.temp.realName)\n              store.commit('SET_PHONE', _this.temp.phone)\n              store.commit('SET_EMAIL', _this.temp.email)\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}