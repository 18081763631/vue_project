{"remainingRequest":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\admin\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\src\\views\\manage\\admin\\form.vue","mtime":1593609155454},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\Desktop\\vue-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Upload from '@/components/Upload/image'\nimport { getListAll } from '@/api/roles'\nimport { getinfo, save } from '@/api/admin'\nimport { formatImgToArr, getNowTime } from '@/utils'\nimport { validatePhone, validateEmail } from '@/utils/validate'\nimport myconfig from '@/config'\n\nexport default {\n  name: 'AdminForm',\n  components: { Upload },\n  data() {\n    var checkPhone = (rule, value, callback) => {\n      if (validatePhone(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    var checkEmail = (rule, value, callback) => {\n      if (validateEmail(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    return {\n      btnLoading: false,\n      roles: {},\n      temp: {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        groupId: [{ required: true, message: '角色必选', trigger: 'change' }],\n        userName: [{ required: true, message: '账号必填', trigger: 'blur' }],\n        phone: [{ validator: checkPhone, message: '手机号格式错误', trigger: 'blur' }],\n        email: [{ validator: checkEmail, message: '邮箱格式错误', trigger: 'blur' }]\n      }\n\n    }\n  },\n  watch: {\n    dialogFormVisible: function() {\n      this.resetTemp()\n    },\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n    this.getRoles()\n  },\n  destroyed() {\n\n  },\n  methods: {\n    getRoles() {\n      getListAll().then(response => {\n        this.roles = response.data\n      })\n    },\n    resetTemp() {\n      this.temp = {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      }\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.currentIndex = -1\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleUpdate(id) {\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      const _this = this\n      getinfo(id).then(response => {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id\n          _this.temp.groupId = response.data.groupId\n          _this.temp.userName = response.data.userName\n          _this.temp.realName = response.data.realName\n          _this.temp.isEnabled = response.data.isEnabled\n          _this.temp.phone = response.data.phone\n          _this.temp.email = response.data.email\n          _this.temp.password = ''\n          _this.temp.img = formatImgToArr(response.data.img)\n        }\n      })\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          if (typeof (d.img) === 'object') {\n            d.img = d.img.join(',')\n          }\n          save(d).then(response => {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id\n              }\n              // todo\n              this.$emit('updateRow', d)\n              _this.dialogFormVisible = false\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"form.vue","sourceRoot":"src/views/manage/admin","sourcesContent":["<template>\n  <el-dialog :title=\"textMap[dialogStatus]\" :visible.sync=\"dialogFormVisible\">\n    <el-form ref=\"dataForm\" :rules=\"rules\" :model=\"temp\" label-position=\"left\" label-width=\"70px\" style=\"width: 100%; height: 50vh;overflow-y: scroll;\">\n      <el-form-item label=\"角色\" prop=\"groupId\">\n        <el-select v-model=\"temp.groupId\" class=\"filter-item\" placeholder=\"请选择\">\n          <el-option v-for=\"item in roles\" :key=\"item.id\" :label=\"item.title\" :value=\"item.id\" />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"账号\" prop=\"userName\">\n        <el-input v-model=\"temp.userName\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"password\">\n        <el-input v-model=\"temp.password\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"头像\" prop=\"img\">\n        <Upload v-model=\"temp.img\" :config=\"config\"/>\n      </el-form-item>\n      <el-form-item label=\"姓名\" prop=\"realName\">\n        <el-input v-model=\"temp.realName\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"手机\" prop=\"phone\">\n        <el-input v-model=\"temp.phone\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"邮箱\" prop=\"email\">\n        <el-input v-model=\"temp.email\" clearable/>\n      </el-form-item>\n      <el-form-item label=\"状态\">\n        <el-radio-group v-model=\"temp.isEnabled\">\n          <el-radio :label=\"1\">正常</el-radio>\n          <el-radio :label=\"0\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"dialogFormVisible = false\">取消</el-button>\n      <el-button :loading=\"btnLoading\" type=\"primary\" @click=\"saveData()\">保存</el-button>\n    </div>\n  </el-dialog>\n</template>\n\n<script>\nimport Upload from '@/components/Upload/image'\nimport { getListAll } from '@/api/roles'\nimport { getinfo, save } from '@/api/admin'\nimport { formatImgToArr, getNowTime } from '@/utils'\nimport { validatePhone, validateEmail } from '@/utils/validate'\nimport myconfig from '@/config'\n\nexport default {\n  name: 'AdminForm',\n  components: { Upload },\n  data() {\n    var checkPhone = (rule, value, callback) => {\n      if (validatePhone(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    var checkEmail = (rule, value, callback) => {\n      if (validateEmail(value)) {\n        callback()\n      } else {\n        return callback(new Error())\n      }\n    }\n    return {\n      btnLoading: false,\n      roles: {},\n      temp: {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      },\n      config: {\n        fileName: 'img',\n        limit: 1,\n        multiple: true,\n        accept: 'image/*',\n        action: myconfig.uploadUrl.img\n      },\n      dialogFormVisible: false,\n      dialogStatus: '',\n      textMap: {\n        update: '编辑',\n        create: '添加'\n      },\n      rules: {\n        groupId: [{ required: true, message: '角色必选', trigger: 'change' }],\n        userName: [{ required: true, message: '账号必填', trigger: 'blur' }],\n        phone: [{ validator: checkPhone, message: '手机号格式错误', trigger: 'blur' }],\n        email: [{ validator: checkEmail, message: '邮箱格式错误', trigger: 'blur' }]\n      }\n\n    }\n  },\n  watch: {\n    dialogFormVisible: function() {\n      this.resetTemp()\n    },\n    temp: {\n      handler(newVal, oldVal) {},\n      immediate: true,\n      deep: true\n    }\n  },\n  created() {\n    this.getRoles()\n  },\n  destroyed() {\n\n  },\n  methods: {\n    getRoles() {\n      getListAll().then(response => {\n        this.roles = response.data\n      })\n    },\n    resetTemp() {\n      this.temp = {\n        id: 0,\n        groupId: '',\n        userName: '',\n        password: '',\n        realName: '',\n        isEnabled: 1,\n        phone: '',\n        email: '',\n        regTime: getNowTime(),\n        img: []\n      }\n    },\n    handleCreate() {\n      this.dialogStatus = 'create'\n      this.dialogFormVisible = true\n      this.currentIndex = -1\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    handleUpdate(id) {\n      this.dialogStatus = 'update'\n      this.dialogFormVisible = true\n      const _this = this\n      getinfo(id).then(response => {\n        if (response.status === 1) {\n          _this.temp.id = response.data.id\n          _this.temp.groupId = response.data.groupId\n          _this.temp.userName = response.data.userName\n          _this.temp.realName = response.data.realName\n          _this.temp.isEnabled = response.data.isEnabled\n          _this.temp.phone = response.data.phone\n          _this.temp.email = response.data.email\n          _this.temp.password = ''\n          _this.temp.img = formatImgToArr(response.data.img)\n        }\n      })\n      this.$nextTick(() => {\n        this.$refs['dataForm'].clearValidate()\n      })\n    },\n    saveData() {\n      this.btnLoading = true\n      this.$refs['dataForm'].validate((valid) => {\n        if (valid) {\n          const _this = this\n          const d = this.temp\n          if (typeof (d.img) === 'object') {\n            d.img = d.img.join(',')\n          }\n          save(d).then(response => {\n            if (response.status === 1) {\n              if (!d.id) {\n                d.id = response.data.id\n              }\n              // todo\n              this.$emit('updateRow', d)\n              _this.dialogFormVisible = false\n              _this.$message.success(response.msg)\n            } else {\n              _this.$message.error(response.msg)\n            }\n            _this.btnLoading = false\n          }).catch((error) => {\n            this.btnLoading = false\n          })\n        } else {\n          this.btnLoading = false\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}